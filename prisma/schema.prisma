// File: prisma/schema.prisma

datasource db {
  provider = "sqlite" // For local development
  url      = env("DATABASE_URL") // Locally, .env.local points to "file:./prisma/dev.db"
                               // On Vercel, this will be your PostgreSQL URL
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  curricula Curriculum[]

  @@map("users")
}

model Curriculum {
  id                 String    @id @default(cuid())
  name               String
  originalFileName   String
  schoolTag          String?
  filePath           String?   // URL from Vercel Blob or local path

  // For SQLite compatibility, store JSON as a String.
  // Your API logic will handle JSON.stringify() and JSON.parse().
  analysisResults    String?   

  uploadedAt         DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  userId             String?
  user               User?     @relation(fields: [userId], references: [id], onDelete: SetNull) // Or Cascade

  actionItems        ActionItem[]

  @@map("curricula")
}

model ActionItem {
  id           String    @id @default(cuid())
  title        String
  status       String    @default("Not Started")
  startDate    DateTime?
  endDate      DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  curriculumId String
  curriculum   Curriculum @relation(fields: [curriculumId], references: [id], onDelete: Cascade)

  @@map("action_items")
}
